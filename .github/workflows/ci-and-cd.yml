name: CI & CD

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_image:
    name: Build Test Image
    runs-on: ubuntu-latest
    outputs:
      build-uuid: ${{ steps.uuidgen.outputs.uuid }}
      build-runner-uid: ${{ steps.variables.outputs.runner-uid }}
      build-runner-user: ${{ steps.variables.outputs.runner-user }}
      build-timestamp: ${{ steps.build-timestamp.outputs.timestamp }}

      git-branch: ${{ steps.variables.outputs.git-branch }}
      git-dasherized-branch: ${{ steps.variables.outputs.git-dasherized-branch }}

      git-commit-sha: ${{ steps.variables.outputs.git-commit-sha }}
      git-commit-short-sha: ${{ steps.variables.outputs.git-commit-short-sha }}

    steps:
      - # We'll generate a unique id that we'll use to identify the build run
        # on our systems
        name: Generate UUID for build
        id: uuidgen
        run: echo "::set-output name=uuid::$(uuidgen)"

      - name: Set additional variables
        id: variables
        uses: icalia-actions/common-variables@v0.0.3

      - name: Set build timestamp
        id: build-timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image
        id: build_test_image
        uses: docker/build-push-action@v2
        with:
          target: testing
          platforms: linux/amd64

          builder: ${{ steps.buildx.outputs.name }}

          build-args: |
            DEVELOPER_UID=${{ steps.variables.outputs.runner-uid }}
            DEVELOPER_USERNAME=${{ steps.variables.outputs.runner-user }}
          tags: |
            icalia-actions/map-github-actor:testing-${{ steps.variables.outputs.git-dasherized-branch }}
            icalia-actions/map-github-actor:testing-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [build_test_image]
    env:
      BUILD_UUID: ${{ needs.build_test_image.outputs.build-uuid }}
      BUILD_RUNNER_UID: ${{ needs.build_test_image.outputs.build-runner-uid }}
      BUILD_RUNNER_USER: ${{ needs.build_test_image.outputs.build-runner-user }}

      GIT_BRANCH: ${{ needs.build_test_image.outputs.git-branch }}
      GIT_DASHERIZED_BRANCH: ${{ needs.build_test_image.outputs.git-dasherized-branch }}

      GIT_COMMIT_SHA: ${{ needs.build_test_image.outputs.git-commit-sha }}
      GIT_COMMIT_SHORT_SHA: ${{ needs.build_test_image.outputs.git-commit-short-sha }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2.3.4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Load Testing Image
        id: load_test_image
        uses: docker/build-push-action@v2
        with:
          target: testing
          platforms: linux/amd64

          builder: ${{ steps.buildx.outputs.name }}

          load: true

          build-args: |
            DEVELOPER_UID=${{ env.BUILD_RUNNER_UID }}
            DEVELOPER_USERNAME=${{ env.BUILD_RUNNER_USER }}
          tags: |
            icalia-actions/map-github-actor:testing-${{ env.GIT_DASHERIZED_BRANCH }}
            icalia-actions/map-github-actor:testing-latest
          cache-from: type=gha

      - name: Run tests
        env:
          TESTING_IMAGE_TAG: ":testing-${{ env.GIT_DASHERIZED_BRANCH }}"
        run: docker compose -f docker-compose.yml -f ci-compose.yml run tests

  build_release_image:
    name: Build Release Image
    runs-on: ubuntu-latest
    needs: [build_test_image]
    env:
      BUILD_UUID: ${{ needs.build_test_image.outputs.build-uuid }}
      BUILD_RUNNER_UID: ${{ needs.build_test_image.outputs.build-runner-uid }}
      BUILD_RUNNER_USER: ${{ needs.build_test_image.outputs.build-runner-user }}

      GIT_BRANCH: ${{ needs.build_test_image.outputs.git-branch }}
      GIT_DASHERIZED_BRANCH: ${{ needs.build_test_image.outputs.git-dasherized-branch }}

      GIT_COMMIT_SHA: ${{ needs.build_test_image.outputs.git-commit-sha }}
      GIT_COMMIT_SHORT_SHA: ${{ needs.build_test_image.outputs.git-commit-short-sha }}

    outputs:
      image-digest: ${{ steps.build_image.outputs.digest }}
      build-timestamp: ${{ needs.build_test_image.outputs.build-timestamp }}
      git-commit-short-sha: ${{ needs.build_test_image.outputs.git-commit-short-sha }}

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image
        id: build_image
        uses: docker/build-push-action@v2
        with:
          target: release
          platforms: linux/amd64

          builder: ${{ steps.buildx.outputs.name }}

          load: true

          build-args: |
            DEVELOPER_UID=${{ env.BUILD_RUNNER_UID }}
            DEVELOPER_USERNAME=${{ env.BUILD_RUNNER_USER }}
          tags: |
            icalia-actions/map-github-actor:${{ env.GIT_DASHERIZED_BRANCH }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Check if dist is up to date
        run: |
          docker run --rm icalia-actions/map-github-actor:${{ env.GIT_DASHERIZED_BRANCH }} cat index.js > dist/index.js
          git diff --quiet --exit-code || echo "::error ::dist/index.js is not up to date - perform a build and commit"
          git diff --quiet --exit-code
